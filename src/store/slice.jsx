import { createSlice } from "@reduxjs/toolkit";

const words = [
  "crawliest",
  "stodgy",
  "museologist",
  "footler",
  "tetanies",
  "obnoxious",
  "tantalised",
  "multipolarities",
  "springier",
  "extincts",
  "kinglets",
  "digitizer",
  "richly",
  "excogitating",
  "tines",
  "squeegeed",
  "thymiest",
  "legibilities",
  "gauds",
  "duotone",
  "tamises",
  "rambled",
  "distinct",
  "mells",
  "melanists",
  "driveled",
  "reknot",
  "trapunto",
  "lullabied",
  "preslices",
  "exonic",
  "seismic",
  "kenosises",
  "amicabilities",
  "accomplishment",
  "day",
  "moldinesses",
  "proconsular",
  "lacrimals",
  "microluxes",
  "evites",
  "piscivores",
  "osteoporoses",
  "veterinary",
  "unridable",
  "windflaws",
  "trophically",
  "oxbloods",
  "bend",
  "mouldiest",
  "blizzardly",
  "factoid",
  "telephoning",
  "cabman",
  "lest",
  "bedsits",
  "dingily",
  "removable",
  "ciliations",
  "fumigation",
  "cellobiose",
  "distractible",
  "delphically",
  "reinforcements",
  "mediastina",
  "peltation",
  "roundups",
  "dramatise",
  "plummeted",
  "chargehands",
  "affirmers",
  "matchmade",
  "retinoid",
  "passers",
  "dotty",
  "distressful",
  "sniggles",
  "dumbfounds",
  "imblaze",
  "romeo",
  "nerd",
  "caladiums",
  "overplotting",
  "sandwiching",
  "tenuis",
  "slamdanced",
  "annualize",
  "forecaddie",
  "sclaffer",
  "skid",
  "vilayets",
  "badnesses",
  "mesomorphs",
  "brothering",
  "actinomycete",
  "nonmeetings",
  "heliports",
  "heating",
  "moist",
  "typology",
  "hardiest",
  "uncollectible",
  "entoprocts",
  "fluid",
  "overmans",
  "schlubs",
  "illiterately",
  "burnouts",
  "bows",
  "coppered",
  "carate",
  "daylilies",
  "intrenched",
  "necrotized",
  "amadou",
  "bedevilled",
  "canzonas",
  "polylysines",
  "riggings",
  "tempi",
  "nonyls",
  "kidskins",
  "microgravity",
  "roadeos",
  "droits",
  "subvention",
  "overutilize",
  "reassured",
  "convener",
  "jubilances",
  "resplitting",
  "mannerisms",
  "greenlit",
  "sweaterdresses",
  "spuming",
  "mungooses",
  "seggar",
  "phosphoproteins",
  "overedited",
  "slungshot",
  "taro",
  "monas",
  "eau",
  "nieves",
  "outrivalling",
  "belittle",
  "carceral",
  "dapperly",
  "buskins",
  "scandalousness",
  "basalts",
  "refurbishing",
  "vertigos",
  "manoeuvred",
  "hoy",
  "murals",
  "pony",
  "adjudge",
  "enrich",
  "wageworker",
  "satanical",
  "caff",
  "unevolved",
  "supercargoes",
  "candleberry",
  "athwart",
  "theatricalizes",
  "rhapsodies",
  "somas",
  "weaklings",
  "anglerfishes",
  "canty",
  "moderato",
  "gumming",
  "grummer",
  "righto",
  "inrushings",
  "subtonic",
  "subprimates",
  "salimeter",
  "ripeners",
  "kibbeh",
  "clout",
  "goldstones",
  "meannesses",
  "pseudocyeses",
  "vivify",
  "rand",
  "bilbo",
  "plankings",
  "lowborn",
  "crenated",
  "permutable",
  "dismay",
  "complaining",
  "mossy",
  "philatelies",
  "indubitability",
  "outglows",
  "discloses",
  "proenzyme",
  "dimming",
  "culver",
  "congou",
  "expositors",
  "pretensioning",
  "halakha",
  "predictions",
  "jauping",
  "typestyles",
  "armload",
  "corporative",
  "pathoses",
  "sailboater",
  "minimizer",
  "syllabification",
  "lustrings",
  "frontless",
  "reascending",
  "clericalisms",
  "shrew",
  "suggestible",
  "jefes",
  "interatomic",
  "maile",
  "reconfiguring",
  "shallop",
  "proctoring",
  "hippo",
  "matcher",
  "desired",
  "larkiest",
  "calcitonin",
  "cursivenesses",
  "impalpabilities",
  "thermoregulate",
  "aesthetician",
  "misbecome",
  "manicuring",
  "disannuls",
  "leeching",
  "impings",
  "dissociated",
  "histologic",
  "myxomatosis",
  "extravagance",
  "fellest",
  "cochairing",
  "deistic",
  "wintertime",
];

const initialState = {
  game: {
    id: 123123321,
    numOfPlayers: 1,
    isHardMode: false,
    score: 0,
    currentWord: "Example",
    isRunning: false,
    finalScore: 0,
  },
};

export const gameSlice = createSlice({
  name: "game",
  initialState,
  reducers: {
    startGame: (state, action) => {
      const newGame = action.payload;
      state.game = newGame;
    },
    addScore: (state, action) => {
      state.game.score += state.game.currentWord.length;
      state.game.currentWord = words[Math.floor(Math.random() * words.length)];
    },
    gameOver: (state, action) => {
      state.game.finalScore = action.payload;
      state.game.isRunning = false;
    },
    changeWord: (state, action) => {},
  },
});

export const { startGame, addScore, gameOver, changeWord } = gameSlice.actions;

export default gameSlice.reducer;
